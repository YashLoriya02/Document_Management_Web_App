import random

def initial_state():
    return random.randint(0, 100)

def evaluate(state):
    return -1 * (state - 50) ** 2  

def get_neighbors(state):
    return [state + 1, state - 1]

def hill_climbing_search(max_iterations=1000):
    current_state = initial_state()
    current_value = evaluate(current_state)
    
    for _ in range(max_iterations):
        neighbors = get_neighbors(current_state)
        next_state = max(neighbors, key=evaluate)
        next_value = evaluate(next_state)
        
        if next_value <= current_value:
            break
        else:
            current_state = next_state
            current_value = next_value
    
    return current_state, current_value

best_state, best_value = hill_climbing_search()
print("Best state found:", best_state)
print("Value at best state:", best_value)

